version: 2.1

# Prerequisite
# Make sure you set secret enviroment variables in CICD
# DOCKER_USERNAME
# DOCKER_PASSWORD
# API_TOKEN

# REBUILD - it has default value "false", if need rebuild the image, turn it on with value "true"
parameters:
  rebuild:
    type: string
    default: "false"

jobs:
  build:
    docker:
      - image: alpine/docker-with-buildx
    environment:
      REBUILD: << pipeline.parameters.rebuild >>
      APPLICATIONS: java
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.09.3
      - run: |
          apk --no-cache --update add bash curl jq uuidgen git
          echo $REBUILD
          # build the application with the latest tag
          for app in ${APPLICATIONS}
          do
            bash -x ./build.sh ${app}
          done
      - persist_to_workspace:
          root: containers
          paths:
            - tags.list

  #scan:
  #  docker:
  #    - image: alpine/trivy
  #  environment:
  #    APPLICATIONS: java
  #  steps:
  #    - checkout
  #    - attach_workspace:
  #        at: containers
  #    - run: |
  #        cat containers/tags.list

  #        for app in ${APPLICATIONS}
  #        do
  #          while read tag
  #          do
  #            echo "Scan image alpine/${app}:${tag} ..."
  #            trivy image -s "HIGH,CRITICAL" alpine/${app}
  #            echo "==== End of Scan ===="
  #          done < containers/tags.list
  #        done

workflows:
  build:
    jobs:
      - build:
          name: build
          context:
            - Docker-Hub
          filters:
            branches:
              only:
                - master
                - main
      # - scan:
      #     requires:
      #       - build
      #     name: scan
      #     context:
      #       - Docker-Hub
      #     filters:
      #       branches:
      #         only:
      #           - master
      #           - main

  nightly:
    triggers:
       - schedule:
           cron: "0 3 * * 6"
           filters:
             branches:
               only:
                 - master
                 - main
    jobs:
      - build:
          name: build
          context:
            - Docker-Hub
          filters:
            branches:
              only:
                - master
                - main

      # - scan:
      #     requires:
      #       - build
      #     name: scan
      #     context:
      #       - Docker-Hub
      #     filters:
      #       branches:
      #         only:
      #           - master
      #           - main
